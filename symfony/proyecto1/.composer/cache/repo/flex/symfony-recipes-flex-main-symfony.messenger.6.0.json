{"body":{"manifests":{"symfony\/messenger":{"manifest":{"copy-from-recipe":{"config\/":"%CONFIG_DIR%\/"},"env":{"#1":"Choose one of the transports below","#2":"MESSENGER_TRANSPORT_DSN=amqp:\/\/guest:guest@localhost:5672\/%2f\/messages","#3":"MESSENGER_TRANSPORT_DSN=redis:\/\/localhost:6379\/messages","MESSENGER_TRANSPORT_DSN":"doctrine:\/\/default?auto_setup=0"},"conflict":{"symfony\/framework-bundle":"<4.3"},"post-install-output":["  * You're ready to use the Messenger component. You can define your own message buses","    or start using the default one right now by injecting the <info>message_bus<\/info> service","    or type-hinting <info>Symfony\\Component\\Messenger\\MessageBusInterface<\/info> in your code.","","  * To send messages to a transport and handle them asynchronously:","","    1. Update the <info>MESSENGER_TRANSPORT_DSN<\/> env var in <comment>.env<\/> if needed","       and <info>framework.messenger.transports.async<\/> in <comment>config\/packages\/messenger.yaml<\/>;","    2. (if using Doctrine) Generate a Doctrine migration <info>bin\/console doctrine:migration:diff<\/>","       and execute it <info>bin\/console doctrine:migration:migrate<\/>","    3. Route your message classes to the async transport in <comment>config\/packages\/messenger.yaml<\/>.","","  * <fg=blue>Read<\/> the documentation at <comment>https:\/\/symfony.com\/doc\/current\/messenger.html<\/>"]},"files":{"config\/packages\/messenger.yaml":{"contents":["framework:","    messenger:","        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.","        # failure_transport: failed","","        transports:","            # https:\/\/symfony.com\/doc\/current\/messenger.html#transport-configuration","            # async: '%env(MESSENGER_TRANSPORT_DSN)%'","            # failed: 'doctrine:\/\/default?queue_name=failed'","            # sync: 'sync:\/\/'","","        routing:","            # Route your messages to the transports","            # 'App\\Message\\YourMessage': async","","# when@test:","#    framework:","#        messenger:","#            transports:","#                # replace with your transport name here (e.g., my_transport: 'in-memory:\/\/')","#                # For more Messenger testing tools, see https:\/\/github.com\/zenstruck\/messenger-test","#                async: 'in-memory:\/\/'",""],"executable":false}},"ref":"ba1ac4e919baba5644d31b57a3284d6ba12d52ee"}}},"headers":{"content-length":["1137"],"source-age":["0"],"expires":["Mon, 06 Mar 2023 17:29:55 GMT"],"x-fastly-request-id":["9307de87c832bdbd13c847a854c9b4336ad43834"],"access-control-allow-origin":["*"],"vary":["Authorization,Accept-Encoding,Origin"],"x-timer":["S1678123495.040624,VS0,VE154"],"x-cache-hits":["0"],"x-cache":["MISS"],"x-served-by":["cache-bog2260035-BOG"],"via":["1.1 varnish"],"date":["Mon, 06 Mar 2023 17:24:55 GMT"],"accept-ranges":["bytes"],"content-encoding":["gzip"],"x-github-request-id":["7162:3F09:192B:2501:640621E7"],"x-xss-protection":["1; mode=block"],"x-frame-options":["deny"],"x-content-type-options":["nosniff"],"strict-transport-security":["max-age=31536000"],"etag":["W\/\"731b3f21b3d3f6b4ad35343486a276bf20fa04c00183d6f0ec9be23ca73beb3d\""],"content-type":["text\/plain; charset=utf-8"],"content-security-policy":["default-src 'none'; style-src 'unsafe-inline'; sandbox"],"cache-control":["max-age=300"]}}